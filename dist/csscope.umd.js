/*! csscope v0.1.0 | https://github.com/ryanmorr/csscope */"use strict";function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}(function(a,b){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.csscope=b())})(void 0,function(){'use strict';function a(a){return a.replace(e," ").replace(f," ").replace(g," ").replace(h,"").trim().replace(i,"$1").replace(j,"}").replace(k,"$1;}")}function b(a,b){function c(a){l+=a}function d(b){a=a.slice(0,b)+k+a.slice(b),c(k.length)}function e(b,c){return b=l+b,a.substring(b,b+c)}function f(b){var d=a.substring(l).match(b)[0];c(d.length)}function g(){for(var b=1;h(a.charAt(l+b));)b++;c(b)}function h(a){return" "===a||"\n"===a||"\t"===a||"\f"===a||"\r"===a}function i(){return!q&&!r}for(var j,k="["+b+"]",l=0,p=!1,q=!1,r=!1;l<a.length;)j=a.charAt(l),h(j)?(p=!0,g()):">"===j||"~"===j||"+"===j?(i()&&d(p?l-1:l),">>>"===e(0,3)?(a=a.slice(0,p?l-1:l)+(p?"":" ")+a.slice(l+3),r=!0):c(1),q=p=!1,g()):","===j?(i()&&d(h(e(-1,1))?l-1:l),q=r=p=!1,g()):(p&&(i()&&d(l-1),p=!1),"*"===j?c(1):"#"===j||"."===j?(c(1),f(m)):"["===j?(i()&&(d(l),q=!0),f(o)):":"===j?(i()&&(d(l),q=!0),"::"===e(0,2)?(c(2),f(m)):f(n)):m.test(a.substring(l))&&f(m));return i()&&(a+=k),a}function c(a,b,c){return a.replace(p,function(a,d){return c.push(d),"@keyframes "+b+"-"+d})}function d(a,b,c){for(var d=a.match(q),e=d[1],f=d[2],g=f.split(","),h=0,j=g.length;h<j;h++){var k=g[h].trim().split(" "),l=k[0];c.includes(l)&&(k[0]=b+"-"+l),g[h]=k.join(" ")}return e+":"+g.join(",")}var e=/(\r\n|\r|\n)+/g,f=/\t/g,g=/\s{2,}/g,h=/\/\*[\W\w]*?\*\//g,i=/\s*([:;{}])\s*/g,j=/\};+/g,k=/([^:;{}])}/g,l=/([^{};]*)([;{}])/g,m=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/,n=/^:((?:\\.|[\w\u00c0-\uFFFF-])+)(?:\((['"]?)((?:\([^)]+\)|[^()]*)+)\2\))?/,o=/^\[((?:\\.|[\w\u00c0-\uFFFF-])+)\s*(?:(\S?=)\s*(?:(['"])([^]*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF-])*)|)|)\s*(i)?\]/,p=/@keyframes\s*((?:\\.|[\w\-\u00c0-\uFFFF])+)/ig,q=/^(animation(?:-name)?)\s*:\s*(.*)$/;return function(e,f){var g=[];f=c(a(f),e,g);var h="",i=!1,j=0;l.lastIndex=0;for(var k;null!=(k=l.exec(f));)if("{"==k[2]){var n=k[1];i&&j++,"@"===n.charAt(0)?(n.startsWith("@keyframes")&&(i=!0,j++),h+=n):i?h+=n:h+=b(n.trim(),e),h+="{\n"}else if("}"==k[2])h+="}\n",i&&(j--,0===j&&(i=!1));else if(";"==k[2]){var o=k[1];h+=o.startsWith("animation")&&0<g.length?d(o,e,g)+";\n":o+";\n"}return h}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
