/*! csscope v0.1.0 | https://github.com/ryanmorr/csscope */"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var NEW_LINES_RE=/(\r\n|\r|\n)+/g,TAB_RE=/\t/g,EXTRA_SPACES_RE=/\s{2,}/g,COMMENTS_RE=/\/\*[\W\w]*?\*\//g,TRAILING_SEPARATOR_SPACES_RE=/\s*([:;{}])\s*/g,UNNECESSARY_SEPARATOR_RE=/\};+/g,TRAILING_SEPARATOR_RE=/([^:;{}])}/g,CSS_RE=/([^{};]*)([;{}])/g,NAME_RE=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/,PSEUDO_RE=/^:((?:\\.|[\w\u00c0-\uFFFF-])+)(?:\((['"]?)((?:\([^)]+\)|[^()]*)+)\2\))?/,ATTRIBUTE_RE=/^\[((?:\\.|[\w\u00c0-\uFFFF-])+)\s*(?:(\S?=)\s*(?:(['"])([^]*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF-])*)|)|)\s*(i)?\]/,KEYFRAME_NAME_RE=/@keyframes\s*((?:\\.|[\w\-\u00c0-\uFFFF])+)/ig,ANIMATION_DECLARATION_RE=/^(animation(?:-name)?)\s*:\s*(.*)$/;function cleanCSS(a){return a.replace(NEW_LINES_RE," ").replace(TAB_RE," ").replace(EXTRA_SPACES_RE," ").replace(COMMENTS_RE,"").trim().replace(TRAILING_SEPARATOR_SPACES_RE,"$1").replace(UNNECESSARY_SEPARATOR_RE,"}").replace(TRAILING_SEPARATOR_RE,"$1;}")}function injectAttributeSelector(a,b){function c(a){l+=a}function d(b){a=a.slice(0,b)+k+a.slice(b),c(k.length)}function e(b,c){return b=l+b,a.substring(b,b+c)}function f(b){var d=a.substring(l).match(b)[0];c(d.length)}function g(){for(var b=1;h(a.charAt(l+b));)b++;c(b)}function h(a){return" "===a||"\n"===a||"\t"===a||"\f"===a||"\r"===a}function i(){return!n&&!o}for(var j,k="["+b+"]",l=0,m=!1,n=!1,o=!1;l<a.length;)j=a.charAt(l),h(j)?(m=!0,g()):">"===j||"~"===j||"+"===j?(i()&&d(m?l-1:l),">>>"===e(0,3)?(a=a.slice(0,m?l-1:l)+(m?"":" ")+a.slice(l+3),o=!0):c(1),n=m=!1,g()):","===j?(i()&&d(h(e(-1,1))?l-1:l),n=o=m=!1,g()):(m&&(i()&&d(l-1),m=!1),"*"===j?c(1):"#"===j||"."===j?(c(1),f(NAME_RE)):"["===j?(i()&&(d(l),n=!0),f(ATTRIBUTE_RE)):":"===j?(i()&&(d(l),n=!0),"::"===e(0,2)?(c(2),f(NAME_RE)):f(PSEUDO_RE)):NAME_RE.test(a.substring(l))&&f(NAME_RE));return i()&&(a+=k),a}function prefixKeyframes(a,b,c){return a.replace(KEYFRAME_NAME_RE,function(a,d){return c.push(d),"@keyframes "+b+"-"+d})}function prefixAnimationName(a,b,c){for(var d=a.match(ANIMATION_DECLARATION_RE),e=d[1],f=d[2],g=f.split(","),h=0,j=g.length;h<j;h++){var k=g[h].trim().split(" "),l=k[0];c.includes(l)&&(k[0]=b+"-"+l),g[h]=k.join(" ")}return e+":"+g.join(",")}function csscope(a,b){var c=[];b=prefixKeyframes(cleanCSS(b),a,c);var d="",e=!1,f=0;CSS_RE.lastIndex=0;for(var g;null!=(g=CSS_RE.exec(b));)if("{"==g[2]){var h=g[1];e&&f++,"@"===h.charAt(0)?(h.startsWith("@keyframes")&&(e=!0,f++),d+=h):e?d+=h:d+=injectAttributeSelector(h.trim(),a),d+="{\n"}else if("}"==g[2])d+="}\n",e&&(f--,0===f&&(e=!1));else if(";"==g[2]){var i=g[1];d+=i.startsWith("animation")&&0<c.length?prefixAnimationName(i,a,c)+";\n":i+";\n"}return d}var _default=csscope;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
